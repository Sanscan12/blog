(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{395:function(t,_,v){"use strict";v.r(_);var a=v(4),s=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"安装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击官方链接下载"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("配置环境")])]),t._v(" "),_("p",[t._v("在MySQL根目录下的 "),_("code",[t._v("bin文件")]),t._v(" 在 变量 "),_("code",[t._v("Path")]),t._v(" 增添 。如")]),t._v(" "),_("div",{staticClass:"language-text extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("D:\\MySQL\\mysql-8.0.22-winx64\\bin\n")])])]),_("p",[_("strong",[t._v("配置文件")])]),t._v(" "),_("p",[t._v("在MySQL根目录下的新建 "),_("code",[t._v("my.ini文件")]),t._v(" 和 "),_("code",[t._v("data文件夹")]),t._v(" , 配置参数")]),t._v(" "),_("div",{staticClass:"language-text extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8\n[mysqld] \n# 设置3306端口\nport = 3306 \n# 设置MySQL根目录\nbasedir=D:\\MySQL\\mysql-8.0.22-winx64\n# 设置MySQL数据库数据存放目录\ndatadir=D:\\MySQL\\mysql-8.0.22-winx64\\data \n# 允许最大连接数\nmax_connections=200 \n# 服务端使用的字符集默认为UTF8\ncharacter-set-server=utf8 \n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 设置时间戳\nexplicit_defaults_for_timestamp=true\n")])])]),_("p",[_("strong",[t._v("安装MySQL")])]),t._v(" "),_("p",[_("strong",[t._v("初始化数据库")]),t._v(" 在MySQL的根目录 "),_("code",[t._v("bin文件夹")]),t._v(" 里 ，管理员身份打开cmd执行指令")]),t._v(" "),_("div",{staticClass:"language-cmd extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("mysqld --initialize-insecure --user=mysql\n")])])]),_("p",[_("strong",[t._v("查看是否安装")]),t._v(" 然后安装执行，cmd执行指令")]),t._v(" "),_("div",{staticClass:"language-cmd extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("mysqld install\n")])])]),_("p",[t._v("如果未提示成功，请用管理员身份打开重新执行cmd执行指令")]),t._v(" "),_("p",[_("strong",[t._v("启动MySQL服务")]),t._v("。cmd执行指令")]),t._v(" "),_("div",{staticClass:"language-cmd extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("net start mysql\n")])])]),_("p",[t._v("也可以在 "),_("strong",[t._v("控制面板")]),t._v(" 打开服务 进行启动 MySQL服务")]),t._v(" "),_("p",[t._v("进入myslq，无密码执行，cmd执行指令")]),t._v(" "),_("div",{staticClass:"language-cmd extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("mysql -uroot -p\n")])])]),_("blockquote",[_("p",[t._v("PS：如果本地IP访问不到，需要重新启动服务，在cmd 进入 "),_("code",[t._v("bin文件夹")]),t._v(" 进行启动服务")])]),t._v(" "),_("h2",{attrs:{id:"卸载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#卸载"}},[t._v("#")]),t._v(" 卸载")]),t._v(" "),_("ol",[_("li",[t._v("管理员运行cmd关闭 MySQL服务，cmd执行指令")])]),t._v(" "),_("div",{staticClass:"language-cmd extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("net stop mysql8\n")])])]),_("ol",{attrs:{start:"2"}},[_("li",[t._v("删除MySQL服务")])]),t._v(" "),_("div",{staticClass:"language-cmd extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("sc delete mysql8 \n或者 \nmysql remove mysql8\n")])])]),_("ol",{attrs:{start:"3"}},[_("li",[t._v("删除mysqlDB目录文件(安装MySQL时my.ini指定的目录)")])]),t._v(" "),_("h2",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),_("h3",{attrs:{id:"整型数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#整型数据"}},[t._v("#")]),t._v(" 整型数据")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("整型数据")]),t._v(" "),_("th",[t._v("字节数")]),t._v(" "),_("th",[t._v("无符号的取值范围")]),t._v(" "),_("th",[t._v("有符号的取值范围")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("TINYINT")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("0~225")]),t._v(" "),_("td",[t._v("-125~127")])]),t._v(" "),_("tr",[_("td",[t._v("SMALLINT")]),t._v(" "),_("td",[t._v("2")]),t._v(" "),_("td",[t._v("0-65535")]),t._v(" "),_("td",[t._v("-32768~32768")])]),t._v(" "),_("tr",[_("td",[t._v("MEDIUMINT")]),t._v(" "),_("td",[t._v("3")]),t._v(" "),_("td",[t._v("0~16777215")]),t._v(" "),_("td",[t._v("···")])]),t._v(" "),_("tr",[_("td",[t._v("INT")]),t._v(" "),_("td",[t._v("4")]),t._v(" "),_("td",[t._v("0-4294967295")]),t._v(" "),_("td",[t._v("···")])]),t._v(" "),_("tr",[_("td",[t._v("BIGINT")]),t._v(" "),_("td",[t._v("8")]),t._v(" "),_("td",[t._v("0~18446744073709551615")]),t._v(" "),_("td")])])]),t._v(" "),_("h3",{attrs:{id:"浮点型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浮点型"}},[t._v("#")]),t._v(" 浮点型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("浮点型 数据")]),t._v(" "),_("th",[t._v("字节数")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("FLOAT[(M,D)]")]),t._v(" "),_("td",[t._v("4")]),t._v(" "),_("td",[t._v("M指定显示长度，D指定小数位数，浮点")])]),t._v(" "),_("tr",[_("td",[t._v("DOUBLE[(M,D)]")]),t._v(" "),_("td",[t._v("8")]),t._v(" "),_("td",[t._v("M指定显示长度，D指定小数位数，浮点")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("定点数型数据")])]),t._v(" "),_("td",[t._v("-")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("DECIMAL(()M , 2)")]),t._v(" "),_("td",[t._v("M+2")]),t._v(" "),_("td",[t._v("定点数，存储 高精度数据")])])])]),t._v(" "),_("h3",{attrs:{id:"日期-时间类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日期-时间类型"}},[t._v("#")]),t._v(" 日期 时间类型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("数据类型")]),t._v(" "),_("th",[t._v("字节数")]),t._v(" "),_("th",[t._v("取值范围")]),t._v(" "),_("th",[t._v("日期格式")]),t._v(" "),_("th",[t._v("零值")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("YEAR")]),t._v(" "),_("td",[t._v("1")]),t._v(" "),_("td",[t._v("1901~2155")]),t._v(" "),_("td",[t._v("yyyy")]),t._v(" "),_("td",[t._v("0000")])]),t._v(" "),_("tr",[_("td",[t._v("DATE")]),t._v(" "),_("td",[t._v("4")]),t._v(" "),_("td",[t._v("1000-01-01-9999-12-3")]),t._v(" "),_("td",[t._v("yyyy-MM-dd")]),t._v(" "),_("td",[t._v("0000-00-00")])]),t._v(" "),_("tr",[_("td",[t._v("TIME")]),t._v(" "),_("td",[t._v("3")]),t._v(" "),_("td",[t._v("-838:59:59-838:59:59")]),t._v(" "),_("td",[t._v("HH:mm:ss")]),t._v(" "),_("td",[t._v("00:00:00")])]),t._v(" "),_("tr",[_("td",[t._v("DATETIME")]),t._v(" "),_("td",[t._v("8")]),t._v(" "),_("td",[t._v("11")]),t._v(" "),_("td",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v(" "),_("td",[t._v("0000-00-00 00:00:00")])]),t._v(" "),_("tr",[_("td",[t._v("TIMESTAMP(时间戳)")]),t._v(" "),_("td",[t._v("4")]),t._v(" "),_("td",[t._v("1970-01-01 00:00:01~2038-01-19 03:14:07")]),t._v(" "),_("td",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v(" "),_("td",[t._v("0000-00-00 00:00:00")])])])]),t._v(" "),_("h3",{attrs:{id:"字符串型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串型"}},[t._v("#")]),t._v(" 字符串型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("字符串类型(单位：字节)")]),t._v(" "),_("th",[t._v("字节状态")]),t._v(" "),_("th",[t._v("优点")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("CHAR((int)Max)")]),t._v(" "),_("td",[t._v("固定")]),t._v(" "),_("td",[t._v("查询快")])]),t._v(" "),_("tr",[_("td",[t._v("VARCHAR((int)Max)")]),t._v(" "),_("td",[t._v("动态")]),t._v(" "),_("td",[t._v("省空间")])])])]),t._v(" "),_("h3",{attrs:{id:"二进制数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二进制数据类型"}},[t._v("#")]),t._v(" 二进制数据类型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("二进制数据类型(单位：长度)")]),t._v(" "),_("th",[t._v("长度状态")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("BINARY((int)Max)")]),t._v(" "),_("td",[t._v("固定")])]),t._v(" "),_("tr",[_("td",[t._v("VARBINARY((int)Max)")]),t._v(" "),_("td",[t._v("动态")])])])]),t._v(" "),_("p",[_("em",[t._v("BINARY类型的长度是固定的，如果长度不足最大长度,后面用“0”对齐，直到指定长度。")])]),t._v(" "),_("h3",{attrs:{id:"大文本数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#大文本数据类型"}},[t._v("#")]),t._v(" 大文本数据类型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("大文本数据类型")]),t._v(" "),_("th",[t._v("存储范围(单位：字节)")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("TINYTEXT")]),t._v(" "),_("td",[t._v("0~255字节")])]),t._v(" "),_("tr",[_("td",[t._v("TEXT")]),t._v(" "),_("td",[t._v("0~65535字节")])]),t._v(" "),_("tr",[_("td",[t._v("MEDIUMTEXT")]),t._v(" "),_("td",[t._v("0~16777215字节")])]),t._v(" "),_("tr",[_("td",[t._v("LONGTEXT")]),t._v(" "),_("td",[t._v("0~4294967295字节")])])])]),t._v(" "),_("h3",{attrs:{id:"大数据二进制类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#大数据二进制类型"}},[t._v("#")]),t._v(" 大数据二进制类型")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("特殊二进制类型")]),t._v(" "),_("th",[t._v("存储范围(单位：字节)")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("TINYBLOB")]),t._v(" "),_("td",[t._v("0~255字节")])]),t._v(" "),_("tr",[_("td",[t._v("BLOB")]),t._v(" "),_("td",[t._v("0-65535字节")])]),t._v(" "),_("tr",[_("td",[t._v("MEDIUMBLOB")]),t._v(" "),_("td",[t._v("0~16777215字节")])]),t._v(" "),_("tr",[_("td",[t._v("LONGBLOB")]),t._v(" "),_("td",[t._v("0-4294967295字节")])])])]),t._v(" "),_("h3",{attrs:{id:"枚举型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#枚举型"}},[t._v("#")]),t._v(" 枚举型")]),t._v(" "),_("p",[t._v("ENUM枚举型，单选项")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("ENUM('值1','值2'···'值n')\n")])])]),_("h3",{attrs:{id:"多选项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多选项"}},[t._v("#")]),t._v(" 多选项")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SET('值1','值2'···'值n')\n")])])]),_("h2",{attrs:{id:"ddl-库操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ddl-库操作"}},[t._v("#")]),t._v(" DDL 库操作")]),t._v(" "),_("p",[t._v("DDL (Data Definition Language)：数据定义语言，操作增删改查的操作")]),t._v(" "),_("p",[t._v("**操作关键字 : ** "),_("code",[t._v("CREATE")]),t._v(" , "),_("code",[t._v("DROP")]),t._v(" , "),_("code",[t._v("ALTER")]),t._v(" , "),_("code",[t._v("SHOW")]),t._v(" , "),_("code",[t._v("USE")])]),t._v(" "),_("h3",{attrs:{id:"创建数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库"}},[t._v("#")]),t._v(" 创建数据库")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("SQL语句")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("==CREATE DATABASE 库名;==")]),t._v(" "),_("td",[t._v("创建库")])]),t._v(" "),_("tr",[_("td",[t._v("==CREATE DATABASE IF NOT EXISTS 库名;==")]),t._v(" "),_("td",[t._v("判断不存在，则创建")])]),t._v(" "),_("tr",[_("td",[t._v("==CREATE DATABASE 库名 CHARACTER SET 编码方式;==")]),t._v(" "),_("td",[t._v("指定编码创建")])]),t._v(" "),_("tr",[_("td",[t._v("==CREATE DATABASE 库名 CHARACTER SET 编码方式 COLLATE 排序规则;==")]),t._v(" "),_("td",[t._v("指定编码和排序规则创建")])])])]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("CREATE DATABASE")]),t._v(" ：创建数据库\n"),_("strong",[t._v("IF NOT EXISTS")]),t._v(" ：检查是否已存在的状态\n"),_("strong",[t._v("CHARACTER SET")]),t._v("：设置编码方式\n"),_("strong",[t._v("COLLATE")]),t._v(" ：排序规则")])]),t._v(" "),_("h3",{attrs:{id:"查看数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查看数据库"}},[t._v("#")]),t._v(" 查看数据库")]),t._v(" "),_("p",[t._v("查看当前数据库：\n==SHOW DATABASES;==")]),t._v(" "),_("p",[t._v("查看创建的库：\n==SHOW CREATE DATABASE 库名;==")]),t._v(" "),_("p",[t._v("查看当前所选的数据库：\n==SELECT DATABASE();==")]),t._v(" "),_("h3",{attrs:{id:"修改数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修改数据库"}},[t._v("#")]),t._v(" 修改数据库")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("SQL语句")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("==ALTER DATABASE 库名;==")]),t._v(" "),_("td",[t._v("修改库")])]),t._v(" "),_("tr",[_("td",[t._v("==ALTER DATABASE 库名 CHARACTER SET 编码方式;==")]),t._v(" "),_("td",[t._v("指定编码更改")])]),t._v(" "),_("tr",[_("td",[t._v("==ALTER DATABASE 库名 CHARACTER SET 编码方式 COLLATE 排序规则;==")]),t._v(" "),_("td",[t._v("指定编码和排序规则更改")])])])]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("ALTER DATABASE")]),t._v(" ：修改数据库\n"),_("strong",[t._v("IF NOT EXISTS")]),t._v(" ：检查是否已存在的状态\n"),_("strong",[t._v("CHARACTER SET")]),t._v(" ：设置编码方式\n"),_("strong",[t._v("COLLATE")]),t._v(" ：排序规则")])]),t._v(" "),_("h3",{attrs:{id:"删除数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除数据库"}},[t._v("#")]),t._v(" 删除数据库")]),t._v(" "),_("p",[t._v("==DROP DATABASE 库名;==")]),t._v(" "),_("h3",{attrs:{id:"选择数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#选择数据库"}},[t._v("#")]),t._v(" 选择数据库")]),t._v(" "),_("p",[t._v("==USE 库名;==")]),t._v(" "),_("h2",{attrs:{id:"ddl-表操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ddl-表操作"}},[t._v("#")]),t._v(" DDL 表操作")]),t._v(" "),_("p",[t._v("DDL (Data Definition Language):数据定义语言，定义数据库对象:库、表、列等")]),t._v(" "),_("p",[t._v("**操作关键字 : ** "),_("code",[t._v("CREATE")]),t._v(" , "),_("code",[t._v("DROP")]),t._v(" , "),_("code",[t._v("ALTER")]),t._v(" , "),_("code",[t._v("SHOW")]),t._v(" , "),_("code",[t._v("USE")])]),t._v(" "),_("h3",{attrs:{id:"创建表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[t._v("#")]),t._v(" 创建表")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("CREATE TABLE 表名(\n   字段名1 数据类型 [完整性约束条件] [COMMENT '注释内容'],\n   字段名2 数据类型 [完整性约束条件] [COMMENT '注释内容'],\n   ·······\n   字段名n 数据类型 [完整性约束条件] [COMMENT '注释内容'],\n   [完整性约束条件](字段1,字段2,·····,字段n)\n)[编码集设置];\n")])])]),_("blockquote",[_("p",[t._v("**编码集设置 : **\nCHARACTER SET 字符集名 [校对规则]\n**校对规则 : **\nCOLLATE 校对名")])]),t._v(" "),_("p",[_("strong",[t._v("快速创建拷贝表")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("CREATE TABLE 表名 AS SELECT * FROM 拷贝表\n")])])]),_("p",[t._v("PS : AS 后面 是拷贝制定查询的数据")]),t._v(" "),_("h3",{attrs:{id:"查看表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查看表"}},[t._v("#")]),t._v(" 查看表")]),t._v(" "),_("p",[t._v("查看指定表字段结构\n==DESC 表名;==")]),t._v(" "),_("p",[t._v("查看当前数据库所有表\n==SHOW TABLES;==")]),t._v(" "),_("p",[t._v("查看表的详细结构\n==SHOW CREATE TABLE 表名;==")]),t._v(" "),_("h3",{attrs:{id:"修改表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修改表"}},[t._v("#")]),t._v(" 修改表")]),t._v(" "),_("p",[_("strong",[t._v("修改表名")])]),t._v(" "),_("p",[t._v("==RENAME TABLE 表名 TO 新表名;==\n==ALTER TABLE 表名 RENAME 新表名;==")]),t._v(" "),_("p",[_("strong",[t._v("增加字段")])]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 ADD 字段名 数据类型;==")]),t._v(" "),_("p",[_("strong",[t._v("字段 修改 与 顺序")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("ALTER TABLE 表名 MODIFY 字段名 数据类型 [更改字段循序 | 完整性约束条件] [COMMENT '内容'];\n")])])]),_("blockquote",[_("p",[t._v("更改字段循序 :\nFIRST | AFTER 字段名2")]),t._v(" "),_("p",[_("strong",[t._v("FIRST")]),t._v("：指定字段为表的第一个\n"),_("strong",[t._v("AFTER")]),t._v("：指定字段插入字段2的后面")])]),t._v(" "),_("p",[_("strong",[t._v("修改字段名")])]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 CHANGE 字段名 新字段名 新字段类型;==")]),t._v(" "),_("p",[_("strong",[t._v("修改表字符集")])]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 CHARACTER SET 字符集类型;==")]),t._v(" "),_("p",[_("strong",[t._v("删除字段")])]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 DROP 字段名;==")]),t._v(" "),_("h3",{attrs:{id:"删除表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[t._v("#")]),t._v(" 删除表")]),t._v(" "),_("p",[t._v("==DROP TABLE 表名;==")]),t._v(" "),_("h2",{attrs:{id:"dml-数据操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dml-数据操作"}},[t._v("#")]),t._v(" DML 数据操作")]),t._v(" "),_("p",[t._v("DML (Data Manipulation Language):数据操作语言，定义数据库记录(数据)增删改 的操作")]),t._v(" "),_("p",[t._v("**操作关键字 : ** "),_("code",[t._v("INSERT")]),t._v(" , "),_("code",[t._v("UPDATA")]),t._v(" , "),_("code",[t._v("DELECT")])]),t._v(" "),_("h3",{attrs:{id:"插入数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[t._v("#")]),t._v(" 插入数据")]),t._v(" "),_("p",[_("strong",[t._v("一条数据添加")]),t._v("\n==INSERT INTO 表名 [(字段名1 [，字段名2. . .])] VALUES(值1 [,值2. . .]);==\n"),_("strong",[t._v("多条数据添加")]),t._v("\n==INSERT INTO 表名 [(字段名)] VALUES (字段值1),(字段值2)...;==")]),t._v(" "),_("p",[_("strong",[t._v("注意：")])]),t._v(" "),_("ul",[_("li",[t._v("插入字段与它的数据类型位置是一一对应的")]),t._v(" "),_("li",[t._v("数据类型对应的值，字段值是非数值，则两侧必须添加单引号")]),t._v(" "),_("li",[t._v("null设置为空")]),t._v(" "),_("li",[t._v("数据的大小应在字段的数据类型规定范围内")]),t._v(" "),_("li",[t._v("如果要插入所有字段数据时可以省写字段，但必须按表中字段顺序写值")]),t._v(" "),_("li",[t._v("尽可能避免字段数据值写入的是 "),_("code",[t._v("null")])])]),t._v(" "),_("h3",{attrs:{id:"更改数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更改数据"}},[t._v("#")]),t._v(" 更改数据")]),t._v(" "),_("p",[_("strong",[t._v("更改单表数据")]),t._v("\n==UPDATE 表名 SET 字段名1 = 字段值1 [,字段名2 = 值2..] [WHERE 条件表达式];==\n"),_("strong",[t._v("更改多表数据")]),t._v("\n==UPDATE 表名1 , 表名2  SET {修改字段值，可跨表修改} [WHERE 条件表达式];==")]),t._v(" "),_("p",[_("strong",[t._v("注意：")])]),t._v(" "),_("ul",[_("li",[t._v("逻辑运算符有： and(并且)、or(或者)、not(取非)")]),t._v(" "),_("li",[t._v("如果更改字段无条件表达式，则指定全部该字段的值一致")])]),t._v(" "),_("h3",{attrs:{id:"删除数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[t._v("#")]),t._v(" 删除数据")]),t._v(" "),_("p",[t._v("==DELETE FROM 表名 [WHERE 条件表达式];==\n==TRUNCATE TABLE 表名;==\n"),_("strong",[t._v("多表删除")]),t._v("\n==DELETE {表名1,表名2...} FROM {表名1,表名2...} [WHERE 条件表达式];==")]),t._v(" "),_("p",[_("strong",[t._v("注意：")])]),t._v(" "),_("ul",[_("li",[t._v("如果无条件表达式，则删除全部数据")]),t._v(" "),_("li",[t._v("DELETE删除可找回")]),t._v(" "),_("li",[t._v("TRUNCATE删除不可找回，类似格式化数据，执行快")]),t._v(" "),_("li",[t._v("不能删除某列的值(可修改数据值置NULL)")]),t._v(" "),_("li",[t._v("多表删除 建议WHERE过滤他们字段的关系")]),t._v(" "),_("li",[t._v("多表中的每张表需要逗号分隔")])]),t._v(" "),_("h2",{attrs:{id:"dcl-安全访问"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dcl-安全访问"}},[t._v("#")]),t._v(" DCL 安全访问")]),t._v(" "),_("p",[t._v("DCL (Data Control Language)︰数据控制语言，用来定义访问权限和安全级别")]),t._v(" "),_("p",[_("strong",[t._v("操作关键字：")]),t._v(" "),_("code",[t._v("GRANT")]),t._v(" , "),_("code",[t._v("REVOKE")])]),t._v(" "),_("h3",{attrs:{id:"创建用户"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#创建用户"}},[t._v("#")]),t._v(" 创建用户")]),t._v(" "),_("p",[t._v("==CREATE USER '用户名'@'指定ip' IDENTIFIED BY '密码';==\n==CREATE USER '用户名'@'%' IDENTIFIED BY '密码';==")]),t._v(" "),_("p",[t._v("指定ip / 任意ip 可登录")]),t._v(" "),_("p",[t._v("==CREATE USER 'bozhu'@'%' IDENTIFIED BY '123123';==")]),t._v(" "),_("h3",{attrs:{id:"授权用户"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#授权用户"}},[t._v("#")]),t._v(" 授权用户")]),t._v(" "),_("p",[t._v("==GRANT 权限1[,权限2...权限n] ON 库名.* TO 用户名@指定ip;==\n==GRANT ALL ON "),_("code",[t._v("*")]),t._v("."),_("code",[t._v("*")]),t._v(" TO 用户名@指定ip;==")]),t._v(" "),_("p",[t._v("指定权限 / 所有权限 用户授权\n(指定权限自行查询)")]),t._v(" "),_("p",[t._v("==GRANT ALL PRIVILEGES ON "),_("em",[t._v(".")]),t._v(" TO 'bozhu'@'%' IDENTIFIED BY 'bozhu' WITH GRANT OPTION;==")]),t._v(" "),_("h3",{attrs:{id:"查询权限"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查询权限"}},[t._v("#")]),t._v(" 查询权限")]),t._v(" "),_("p",[t._v("==SHOW GRANTS FOR 用户名@指定IP;==\n==SHOW GRANTS FOR 用户名@‘%’;==")]),t._v(" "),_("p",[t._v("查询指定 / 查询所有 IP的权限情况")]),t._v(" "),_("h3",{attrs:{id:"撤销权限"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#撤销权限"}},[t._v("#")]),t._v(" 撤销权限")]),t._v(" "),_("p",[t._v("==REVOKE 权限1[,权限2...权限n] ON 库名.* FROM 用户名@指定IP;==")]),t._v(" "),_("h3",{attrs:{id:"删除用户"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#删除用户"}},[t._v("#")]),t._v(" 删除用户")]),t._v(" "),_("p",[t._v("==DROP USER 用户名@指定IP==")]),t._v(" "),_("h3",{attrs:{id:"权限刷新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#权限刷新"}},[t._v("#")]),t._v(" 权限刷新")]),t._v(" "),_("p",[t._v("==flush privileges;==")]),t._v(" "),_("blockquote",[_("p",[t._v("修改后需要刷新生效权限")])]),t._v(" "),_("h2",{attrs:{id:"dql-数据查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dql-数据查询"}},[t._v("#")]),t._v(" DQL 数据查询")]),t._v(" "),_("p",[t._v("DQL(Data Query Language)：数据查询语言，用来查询记录(数据)查询\n数据库执行DQL语句不会对数据进行改变，而是让数据库发送结果集给客户端\n查询返回的结果集是一张虚拟表")]),t._v(" "),_("p",[_("strong",[t._v("操作关键字：")]),t._v(" "),_("code",[t._v("SELECT")])]),t._v(" "),_("p",[_("strong",[t._v("SELECT的语法结构：")])]),t._v(" "),_("div",{staticClass:"language-MYSQL extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT (* | {字段名1 [别名][,字段名2[别名]····,字段名n[别名]]} ) FROM 表名 [可选参数];\n")])])]),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT * FROM 表名;\n")])])]),_("p",[_("strong",[t._v("参数：")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("[WHERE 条件表达式];")])]),t._v(" "),_("li",[_("p",[t._v("[GROUP BY 字段名 [HAVING 条件表达式2]] ;")])]),t._v(" "),_("li",[_("p",[t._v("[ORDER BY 字段名 [ASC | DESC]];")])]),t._v(" "),_("li",[_("p",[t._v("[LIMIT [OFFSET] (int)记录数];")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("别名")]),t._v("：代替字段名")])]),t._v(" "),_("li",[_("p",[t._v("**DISTINCT：**过滤表字段中重复的值(数据)，如果指定是多个字段，而且指定的字段值相同，则过滤重复的值！！！")])]),t._v(" "),_("li",[_("p",[t._v("**WHERE：**指定查询条件")])]),t._v(" "),_("li",[_("p",[t._v("**GROUP BY：**将查询结果按指定字段进行分组")]),t._v(" "),_("ul",[_("li",[t._v("**HAVING：**对分组后的结果进行过滤")])])]),t._v(" "),_("li",[_("p",[t._v("**ORDER BY：**将查询结果按指定字段进行排序，排列方式有参数ASC(升序)、DESC(降序)控制，默认为ASC(升序)")])]),t._v(" "),_("li",[_("p",[t._v("**LIMIT：**限制查询结果的数量，后面有可有两个参数")]),t._v(" "),_("ul",[_("li",[t._v("**OFFSET：**表示偏移量，如果偏移量为0则从第一条开始,。不指定参数1，其默认值为0。")]),t._v(" "),_("li",[t._v("**记录数：**表示返回查询记录的条数")])])])]),t._v(" "),_("h3",{attrs:{id:"普通查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#普通查询"}},[t._v("#")]),t._v(" 普通查询")]),t._v(" "),_("h4",{attrs:{id:"条件查询-where"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#条件查询-where"}},[t._v("#")]),t._v(" 条件查询 (WHERE)")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE (条件表达式);\n\n# 查询 age大于等于25 \nSELECT * FROM stu WHERE age>=25;\n# 查询 age大于等于25 指定显示 sname\nSELECT sname FROM stu WHERE age>=25;\n# 查询 指定gender值非male\nSELECT * FROM stu WHERE gender!='male';\nSELECT * FROM stu WHERE gender<>'male';\nSELECT * FROM stu WHERE NOT gender='male';\n")])])]),_("h4",{attrs:{id:"指定查询-in"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指定查询-in"}},[t._v("#")]),t._v(" 指定查询 (IN)")]),t._v(" "),_("p",[t._v("查指定字段")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE 字段名 [NOT] IN (值1，值2，···);\n\n# 查询 指定sid\nSELECT * FROM stu WHERE sid IN ('S_1011' , 'S_1004');\n# 查询 指定sid \nSELECT * FROM stu WHERE sid NOT IN ('S_1011' , 'S_1004');\n")])])]),_("h4",{attrs:{id:"范围查询-between-and"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#范围查询-between-and"}},[t._v("#")]),t._v(" 范围查询 (BETWEEN  AND)")]),t._v(" "),_("p",[t._v("查指定字段的范围值")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE 字段名 [NOT] BETWEEN (int)值1 AND (int)值2;\n\n# 查询 指定age 12 - 28的范围\nSELECT * FROM stu WHERE age BETWEEN 12 AND 28;\n# 查询 指定age 非12 - 28的范围\nSELECT * FROM stu WHERE age NOT BETWEEN 12 AND 28;\n")])])]),_("p",[t._v("查询字段名的值1和值2的范围，前提2值必须大于1值")]),t._v(" "),_("h4",{attrs:{id:"空值查询-null"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#空值查询-null"}},[t._v("#")]),t._v(" 空值查询 (NULL)")]),t._v(" "),_("p",[t._v("查字段NULL值")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE 字段名 IS [NOT] NULL;\n\n# 查询 age为空的\nSELECT * FROM stu WHERE age IS NULL;\n# 查询 gender不为空的\nSELECT * FROM stu WHERE gender IS NOT NULL;\n")])])]),_("h4",{attrs:{id:"过滤查询-distinct"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#过滤查询-distinct"}},[t._v("#")]),t._v(" 过滤查询 (DISTINCT )")]),t._v(" "),_("p",[t._v("过滤重复字段")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT DISTINCT * | {字段1,字段2...字段n} FROM 表名 [···];\n\n# 查询表中不重复的字段\nSELECT DISTINCT * FROM stu;\n")])])]),_("h4",{attrs:{id:"模糊查询-like"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模糊查询-like"}},[t._v("#")]),t._v(" 模糊查询 (LIKE)")]),t._v(" "),_("p",[t._v("寻找匹配的字符串")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE 字段名 [NOT] LIKE '匹配字符串%_';\n\n# 查询 sname 前缀有字符 l \nSELECT * FROM stu WHERE sname LIKE 'l%';\n# 查询 sname 第5个字符为 S \nSELECT * FROM stu WHERE sname LIKE '_____S%';\n")])])]),_("p",[_("strong",[t._v("注意：")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("%")]),t._v(" 任意0 - n个字符\n"),_("code",[t._v("_")]),t._v(" 一个字符，通配符(未知数)\n"),_("code",[t._v("\\")]),t._v(" 进行转义\n"),_("code",[t._v("\\%")]),t._v(" 为 "),_("code",[t._v("%")])])]),t._v(" "),_("h4",{attrs:{id:"多条件查询-and"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多条件查询-and"}},[t._v("#")]),t._v(" 多条件查询  (AND)")]),t._v(" "),_("p",[t._v("(交集)连接两个或者多个查询条件")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE 条件表达式1 [AND 条件表达式2 [··· AND 条件表达式n]];\n\n#查询 age>16 && age<28\nSELECT * FROM stu WHERE age>16 AND age<28;\n#查询 age>16 && age<28 且不能有 25\nSELECT * FROM stu WHERE age>16 AND age<28 AND age != 25;\n")])])]),_("h4",{attrs:{id:"多条件查询-or"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多条件查询-or"}},[t._v("#")]),t._v(" 多条件查询 (OR)")]),t._v(" "),_("p",[t._v("(并集)记录满足任意一个条件即被查出")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("··· WHERE 条件表达式1 [OR 条件表达式2 [··· OR 条件表达式n]];\n\n# 查询 age<16 || age>28\nSELECT * FROM stu WHERE age<16 OR age>28;\n# 查询 age<16 || age>28 且不能有 5\nSELECT * FROM stu WHERE  age != 5 AND age<16 OR age>28;\n")])])]),_("p",[_("strong",[t._v("OR和AND一起用的情况：")]),t._v("\nAND的优先级高于OR，因此当两者在一起使用时，应该先运算AND两边的条件表达式，再运算OR两边的条件表达式")]),t._v(" "),_("h3",{attrs:{id:"高级查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#高级查询"}},[t._v("#")]),t._v(" 高级查询")]),t._v(" "),_("h4",{attrs:{id:"聚合函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),_("h5",{attrs:{id:"记数函数-count"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#记数函数-count"}},[t._v("#")]),t._v(" 记数函数 (COUNT)")]),t._v(" "),_("p",[t._v("统计不为null的记录条数")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT COUNT((*) | (字段名)) \nFROM 表名 [···];\n\n# 查询 emp2表 总记录数\nSELECT COUNT(*) FROM emp2 ;\n# 查询 emp2表 comm记录数\nSELECT COUNT(comm) FROM emp2 ;\n")])])]),_("h5",{attrs:{id:"求和函数-sum"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#求和函数-sum"}},[t._v("#")]),t._v(" 求和函数 (SUM)")]),t._v(" "),_("p",[t._v("求出表中某个字段所有值的总和")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT SUM(字段名1)[,SUM(字段名2)...,SUM(字段名n)] \nFROM 表名 [···];\n\n# 查询 emp2表 sal字段总和 \nSELECT SUM(sal) FROM emp2;\n# 查询 emp2表 sal+comm字段 总和(IFNULL(comm , 0) 如果字段值为NULL 则至为0)\nSELECT SUM(sal+ IFNULL(comm , 0) ) FROM emp2;\n")])])]),_("h5",{attrs:{id:"平均值函数-avg"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#平均值函数-avg"}},[t._v("#")]),t._v(" 平均值函数 (AVG)")]),t._v(" "),_("p",[t._v("求出某个字段所有值的平均值")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT AVG(字段名1)[,AVG(字段名2)...,AVG(字段名n)] \nFROM 表名 [···];\n\n# 查询 emp2表 sal字段平均值\nSELECT AVG(sal) FROM emp2;\n")])])]),_("h5",{attrs:{id:"最大值函数-max"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#最大值函数-max"}},[t._v("#")]),t._v(" 最大值函数 (MAX)")]),t._v(" "),_("p",[t._v("用于求出某个字段的最大值，语法格式:")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT MAX(字段名1)[,MAX(字段名2)...,MAX(字段名n)] \nFROM 表名 [···];\n\n# 查询 emp2表 mgr字段最大值\nSELECT MAX(mgr) FROM emp2;\n")])])]),_("h5",{attrs:{id:"最小值函数-min"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#最小值函数-min"}},[t._v("#")]),t._v(" 最小值函数 (MIN)")]),t._v(" "),_("p",[t._v("用于求出某个字段的最小值，语法格式:")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT MIN(字段名1)[,MIN(字段名2)...,MIN(字段名n)] \nFROM 表名 [···];\n\n# 查询 emp2表 mgr字段最小值\nSELECT MIN(mgr) FROM emp2;\n")])])]),_("h4",{attrs:{id:"顺序查询-order-by"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#顺序查询-order-by"}},[t._v("#")]),t._v(" 顺序查询 (ORDER BY)")]),t._v(" "),_("p",[t._v("对查询结果进行排序，语法格式:")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT * | {字段1,字段2...字段n} FROM 表名 \nORDER BY 字段名1 [ASC | DESC] [,字段名2 [ASC| DESC]...,字段名n [ASC | DESC]];\n\n# 查询 排序 emp2 表的 mgr(降序)\nSELECT * FROM emp2 ORDER BY mgr DESC;\n# 查询 排序 emp2表 的 先排序mar ，相同值的情况排序sal (默认升序)\nSELECT * FROM emp2 ORDER BY mgr , sal;\n")])])]),_("p",[_("strong",[t._v("ORDER BY")]),t._v("：指定字段进行排序\n"),_("strong",[t._v("SELECT")]),t._v("：指定查询的字段\n"),_("strong",[t._v("ASC")]),t._v("升序(默认)、"),_("strong",[t._v("DESC")]),t._v("降序")]),t._v(" "),_("p",[_("strong",[t._v("注意")]),t._v("：指定字段升序排列时，某条字段值为NULL,则这条记录会在第一条显示，因NULL值被认为是最小值")]),t._v(" "),_("h4",{attrs:{id:"分组查询-group-by"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分组查询-group-by"}},[t._v("#")]),t._v(" 分组查询 (GROUP BY)")]),t._v(" "),_("p",[t._v("对字段值进行分组查询")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT 字段名1 | [···] FROM 表名\nGROUP BY 字段名1,字段2,···[HAVING 条件表达式 | ···];\n\n# 查询 emp2表 以daptno字段分组 进行sal求和 \nSELECT deptno , SUM(sal) FROM emp2 GROUP BY deptno;\n# 查询 emp2表 以daptno字段分组 每个dapthon分组的记录数 并排序\nSELECT deptno , COUNT(*) FROM emp2 GROUP BY deptno ORDER BY deptno;\n# 查询 emp2表 以daptno字段分组 deptno值为30 过滤\nSELECT deptno , SUM(sal) FROM emp2 GROUP BY deptno HAVING deptno != 30;\n# 查询 emp2表 以daptno字段分组 mgr值小于7800 过滤\nSELECT deptno , COUNT(*) FROM emp2 WHERE mgr>7800 GROUP BY deptno;\n")])])]),_("p",[_("strong",[t._v("注意：")])]),t._v(" "),_("ol",[_("li",[t._v("GROUP BY后面的字段 是指定字段进行分组")]),t._v(" "),_("li",[t._v("聚合函数一起使用")]),t._v(" "),_("li",[t._v("查询过滤使用 "),_("code",[t._v("HAVING")]),t._v(" 并非 "),_("code",[t._v("WHERE")])]),t._v(" "),_("li",[t._v("HAVING不能单独出现，只能存在GROUP BY后面")]),t._v(" "),_("li",[t._v("非指定字段分组不能显示字段\n如：(指定字段分组是deptno字段，但不能显示empno字段)\nSELECT empno , SUM(sal) FROM emp2 GROUP BY deptno;")]),t._v(" "),_("li",[t._v("指定分组的字段可进行排序")])]),t._v(" "),_("p",[_("strong",[t._v("WHERE和HAVING区别")])]),t._v(" "),_("p",[_("strong",[t._v("WHERE语句")]),t._v("：分组前进行过滤,不能使用聚合函数\n"),_("strong",[t._v("HAVING语句")]),t._v("：分组后进行过滤，可使用聚合函数")]),t._v(" "),_("h4",{attrs:{id:"限制查询-limit"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#限制查询-limit"}},[t._v("#")]),t._v(" 限制查询 (LIMIT)")]),t._v(" "),_("p",[t._v("限制查询结果的数量")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT 字段名1[,字段名2,...字段n] FROM 表名 \nLIMIT [(int)偏移量，](int)显示数;\n\n# 查询 emp2表 sal最小5个\nSELECT * FROM emp2 ORDER BY sal LIMIT 0\t , 5;\n# 查询 emp2表 sal最大5个\nSELECT * FROM emp2 ORDER BY sal DESC LIMIT 0 , 5;\n")])])]),_("p",[_("strong",[t._v("批量分页查询的情况")])]),t._v(" "),_("p",[t._v("如果有大量数据比如：10页，每页有10条 ，共有100条！\n第一页0，第二页10，第三页20····第九页90")]),t._v(" "),_("p",[_("strong",[t._v("pagelndex")]),t._v(" 页码数、"),_("strong",[t._v("pagesize")]),t._v(" 每页显示的条数")]),t._v(" "),_("p",[t._v("==LIMIT (pageindex-1)*pagesize , pagesize;==")]),t._v(" "),_("h3",{attrs:{id:"别名"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#别名"}},[t._v("#")]),t._v(" 别名")]),t._v(" "),_("p",[t._v("在查询数据时，可以为表和字段取别名，这个别名可以代替其指定的表和字段。")]),t._v(" "),_("h4",{attrs:{id:"表别名"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表别名"}},[t._v("#")]),t._v(" 表别名")]),t._v(" "),_("p",[t._v("可以为表取一个别名,用这个别名来代替表的名称。别名格式:")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT (* | 字段) FROM 表名 别名 [...];\n")])])]),_("p",[t._v("AS:用于指定表名的别名,它可以省略不写。")]),t._v(" "),_("h4",{attrs:{id:"字段别名"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字段别名"}},[t._v("#")]),t._v(" 字段别名")]),t._v(" "),_("p",[t._v("为字段取一个别名,用这个别名来代替表的名称。别名格式:")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT (* | 字段名1 [别名][,字段名2[别名]····,字段名n[别名]]) FROM 表名 [...];\n# 或者：\nSELECT (* | 字段名1 [AS 别名][,字段名2[AS 别名]····,字段名n[AS 别名]]) FROM 表名 [...];\n")])])]),_("h3",{attrs:{id:"多表关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多表关系"}},[t._v("#")]),t._v(" 多表关系")]),t._v(" "),_("p",[_("strong",[t._v("多对一")]),t._v("\n在多对一的表关系中，应将外键建在多的一方")]),t._v(" "),_("p",[_("strong",[t._v("多对多")]),t._v("\n为了实现数据表多对多的关系，需要定义"),_("strong",[t._v("第三方中间表")]),t._v("来保存两个关系表的外键")]),t._v(" "),_("p",[_("strong",[t._v("一对一")]),t._v("\n一对一的对应关系中，"),_("strong",[t._v("需要分清主从关系")]),t._v("，通常在从表中建立外键")]),t._v(" "),_("p",[t._v("表创建及测试调用例子 复制导入 sql脚本导入")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for category\n-- ----------------------------\nDROP TABLE IF EXISTS `category`;\nCREATE TABLE `category`  (\n  `cid` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `cname` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`cid`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of category\n-- ----------------------------\nINSERT INTO `category` VALUES ('c001', '电器');\nINSERT INTO `category` VALUES ('c002', '服饰');\nINSERT INTO `category` VALUES ('c003', '化妆品');\nINSERT INTO `category` VALUES ('c004', '书籍');\n\n-- ----------------------------\n-- Table structure for class\n-- ----------------------------\nDROP TABLE IF EXISTS `class`;\nCREATE TABLE `class`  (\n  `classid` int(0) NOT NULL AUTO_INCREMENT,\n  `classname` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`classid`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of class\n-- ----------------------------\nINSERT INTO `class` VALUES (1, '红龙班');\nINSERT INTO `class` VALUES (2, '卫冕班');\nINSERT INTO `class` VALUES (3, '神州班');\nINSERT INTO `class` VALUES (4, '航天班');\n\n-- ----------------------------\n-- Table structure for orderitem\n-- ----------------------------\nDROP TABLE IF EXISTS `orderitem`;\nCREATE TABLE `orderitem`  (\n  `oid` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `pid` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of orderitem\n-- ----------------------------\n\n-- ----------------------------\n-- Table structure for orders\n-- ----------------------------\nDROP TABLE IF EXISTS `orders`;\nCREATE TABLE `orders`  (\n  `oid` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `totalprice` double NULL DEFAULT NULL,\n  `uid` int(0) NULL DEFAULT NULL,\n  PRIMARY KEY (`oid`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of orders\n-- ----------------------------\n\n-- ----------------------------\n-- Table structure for products\n-- ----------------------------\nDROP TABLE IF EXISTS `products`;\nCREATE TABLE `products`  (\n  `pid` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `name` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `price` double NULL DEFAULT NULL,\n  `category_id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`pid`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of products\n-- ----------------------------\nINSERT INTO `products` VALUES ('p001', '联想', 5000, 'c001');\nINSERT INTO `products` VALUES ('p002', '海尔', 3000, 'c001');\nINSERT INTO `products` VALUES ('p003', '雷神', 5000, 'c001');\nINSERT INTO `products` VALUES ('p004', 'JACKJONES', 800, 'c002');\nINSERT INTO `products` VALUES ('p005', '真维斯', 200, 'c002');\nINSERT INTO `products` VALUES ('p006', '花花公子', 440, 'c002');\nINSERT INTO `products` VALUES ('p007', '劲霸', 2000, 'c002');\nINSERT INTO `products` VALUES ('p008', '香奈儿', 800, 'c003');\nINSERT INTO `products` VALUES ('p009', '相宜本草', 200, 'c003');\nINSERT INTO `products` VALUES ('p010', '梅明子', 200, NULL);\n\n-- ----------------------------\n-- Table structure for scores\n-- ----------------------------\nDROP TABLE IF EXISTS `scores`;\nCREATE TABLE `scores`  (\n  `sid` int(0) NOT NULL AUTO_INCREMENT,\n  `score` int(0) NULL DEFAULT NULL,\n  `subjectid` int(0) NULL DEFAULT NULL,\n  `studentid` int(0) NULL DEFAULT NULL,\n  PRIMARY KEY (`sid`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 13 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of scores\n-- ----------------------------\nINSERT INTO `scores` VALUES (1, 43, 1, 1);\nINSERT INTO `scores` VALUES (2, 100, 2, 1);\nINSERT INTO `scores` VALUES (3, 54, 3, 1);\nINSERT INTO `scores` VALUES (4, 34, 1, 2);\nINSERT INTO `scores` VALUES (5, 52, 2, 2);\nINSERT INTO `scores` VALUES (6, 32, 3, 2);\nINSERT INTO `scores` VALUES (7, 41, 1, 3);\nINSERT INTO `scores` VALUES (8, 86, 3, 3);\nINSERT INTO `scores` VALUES (9, 98, 2, 3);\nINSERT INTO `scores` VALUES (10, 78, 3, 4);\nINSERT INTO `scores` VALUES (11, 76, 2, 4);\nINSERT INTO `scores` VALUES (12, 54, 1, 4);\n\n-- ----------------------------\n-- Table structure for student\n-- ----------------------------\nDROP TABLE IF EXISTS `student`;\nCREATE TABLE `student`  (\n  `studentid` int(0) NOT NULL AUTO_INCREMENT,\n  `studentname` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `password` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `sex` char(1) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `classid` int(0) NULL DEFAULT NULL,\n  `test` int(0) NULL DEFAULT NULL,\n  PRIMARY KEY (`studentid`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of student\n-- ----------------------------\nINSERT INTO `student` VALUES (1, '黑猫', '111111', '女', 1, 10);\nINSERT INTO `student` VALUES (2, '大鲸', '2222', '男', 3, 20);\nINSERT INTO `student` VALUES (3, '白兔', '3333', '女', 3, 30);\nINSERT INTO `student` VALUES (4, '柏竹', '4444', '男', NULL, 40);\nINSERT INTO `student` VALUES (5, '棕熊', '5555', '男', 5, 50);\nINSERT INTO `student` VALUES (6, '智乃', '6666', '女', 3, 60);\nINSERT INTO `student` VALUES (7, '蕾姆', '7777', '女', 2, 70);\nINSERT INTO `student` VALUES (8, '艾米', '8888', '女', 1, 80);\nINSERT INTO `student` VALUES (9, '纱雾', '9999', '女', 2, 90);\n\n-- ----------------------------\n-- Table structure for subject\n-- ----------------------------\nDROP TABLE IF EXISTS `subject`;\nCREATE TABLE `subject`  (\n  `subjectid` int(0) NOT NULL AUTO_INCREMENT,\n  `subjectname` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`subjectid`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of subject\n-- ----------------------------\nINSERT INTO `subject` VALUES (1, 'Java');\nINSERT INTO `subject` VALUES (2, 'MySQL');\nINSERT INTO `subject` VALUES (3, 'HTML');\n\n-- ----------------------------\n-- Table structure for users\n-- ----------------------------\nDROP TABLE IF EXISTS `users`;\nCREATE TABLE `users`  (\n  `userid` int(0) NULL DEFAULT NULL,\n  `username` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `upass` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL\n) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of users\n-- ----------------------------\n\nSET FOREIGN_KEY_CHECKS = 1;\n")])])]),_("h4",{attrs:{id:"连接查询-cross-join"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接查询-cross-join"}},[t._v("#")]),t._v(" 连接查询(CROSS JOIN)")]),t._v(" "),_("p",[t._v("交叉连接又称 笛卡尔积 ，返回结果的是 "),_("strong",[t._v("被连接的两个表中所有字段行乘积")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT {* | 查询字段} FROM 表1 CROSS JOIN 表2 [WHERE 条件表达式];\n# 或者(简写)\nSELECT {* | 查询字段} FROM 表1,表2 [WHERE 条件表达式];\n\n# 将学生与班级交叉查询\nSELECT * FROM student CROSS JOIN class;\n")])])]),_("h4",{attrs:{id:"自然连接-natural-join"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自然连接-natural-join"}},[t._v("#")]),t._v(" 自然连接(NATURAL JOIN)")]),t._v(" "),_("p",[t._v("特殊的等值连接，前提两表字段属性必须相同，且字段名也要相同，无须添加连接条件，得出的结果是消除重复的字段")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT {* | 查询字段} FROM 表1 NATURAL JOIN 表2;\n\n# 查询学生所在的班级\nSELECT * FROM student NATURAL JOIN class;\n")])])]),_("h4",{attrs:{id:"合并结果集-union"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#合并结果集-union"}},[t._v("#")]),t._v(" 合并结果集 (UNION)")]),t._v(" "),_("p",[t._v("连接查询的过程中，通过添加过滤条件来限制查询结果，使查询结果更加精确(ALL去除重复的记录)")]),t._v(" "),_("p",[t._v("应用场景：")]),t._v(" "),_("ul",[_("li",[t._v("查询列数类型一致可合并！！！")]),t._v(" "),_("li",[t._v("查询两表相同列数类型进行合并结果")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT {* | 查询字段} FROM 表1 UNION [ALL]\nSELECT {* | 查询字段} FROM 表2;\n\n# 合并两表数据\nSELECT studentid,studentname FROM student UNION \nSELECT subjectid,subjectname FROM subject;\n")])])]),_("p",[_("strong",[t._v("注意：")]),t._v(" 合并前提必须将两表的列数和类型一致")]),t._v(" "),_("h4",{attrs:{id:"内连接-inner-join"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内连接-inner-join"}},[t._v("#")]),t._v(" 内连接 (INNER JOIN)")]),t._v(" "),_("p",[t._v("内连接使用 比较运算符，对两表中指定字段值进行比较，列出与连接条件匹配的数据行 ，字段值符合匹配的进行连接，组合成新的记录(无视不匹配的字段)")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("# \nSELECT  {* | 查询字段}  FROM  表1  INNER  JOIN  表2  ON  {表1.关系字段 = 表2.关系字段 | WHERE 条件表达式} ;\n# 或者 SQL92写法\nSELECT {* | 查询字段}  FROM  表1,表2  WHERE  表1.关系字段 = 表2.关系字段;\n# 或者 SQL99写法\nSELECT {* | 查询字段} FROM 表1 JOIN 表2 ON 表1.关系字段 = 表2.关系字段 WHERE 约束;\n\n# 查询 与班关联的学生(已经分配班级的学生)\nSELECT * FROM student JOIN class ON student.classid = class.classid;\n\n# 查询花子所有成绩\nSELECT subjectname,score \nFROM\n\tscores , subject , student \nWHERE\n\tscores.subjectid = subject.subjectid \n\tAND scores.studentid = student.studentid \n\tAND student.studentname = '花儿';\n\n# 查询 所有科目的平均值\nSELECT subjectname , AVG( score ) \nFROM\n\tscores JOIN subject \n\tON scores.subjectid = subject.subjectid \nGROUP BY\n\tsubjectname;\n")])])]),_("h4",{attrs:{id:"外连接-outer-join"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#外连接-outer-join"}},[t._v("#")]),t._v(" 外连接 (OUTER JOIN)")]),t._v(" "),_("p",[t._v("外连接 弥补了内连接查询不匹配的条件，查出不满足条件的可能\n外连接包括： "),_("strong",[t._v("左连接")]),t._v(" / "),_("strong",[t._v("右连接")])]),t._v(" "),_("p",[_("strong",[t._v("左连接")]),t._v("\n指定左表的所有记录，所有满足连接条件的记录。如果左表的某条记录在右表中不存在，则在右表中显示为空值")]),t._v(" "),_("p",[t._v("主表 为左边，从表 为右边")]),t._v(" "),_("p",[_("strong",[t._v("右连接")]),t._v("\n右连接与左连接正好相反")]),t._v(" "),_("p",[t._v("主表 为右边，从表 为左边")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("# 可将 {LEFT|RIGHT} OUTER JOIN 进行缩写为 {LEFT|RIGHT} JOIN\nSELECT {*|查询字段} FROM 主表 {LEFT|RIGHT} JOIN 从表 ON 主表.字段 = 从表.字段;\n# 左外连接\nSELECT {*|查询字段} FROM 主表 LEFT JOIN 从表 ON 主表.字段 = 从表.字段;\n# 右外连接\nSELECT {*|查询字段} FROM 主表 RIGHT JOIN 从表 ON 主表.字段 = 从表.字段;\n\n# 左外查询\nSELECT * FROM\n\tstudent LEFT JOIN class \n\tON student.classid = class.classid;\n# 右外查询\nSELECT * FROM\n\tstudent RIGHT JOIN class \n\tON student.classid = class.classid;\n")])])]),_("p",[_("strong",[t._v("注意：")]),t._v(" 主表会显示所有字段，空值或不匹配条件的字段均可查询！！！")]),t._v(" "),_("h4",{attrs:{id:"子查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),_("p",[t._v("子查询是指一个查询语句 嵌套在另一个 查询语句内部的查询\n在执行查询语句时，首先会执行子查询中的语句，然后将返回的结果作为外层查询的过滤条件，子查询必须返回是一个字段数据")]),t._v(" "),_("h5",{attrs:{id:"where中子查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#where中子查询"}},[t._v("#")]),t._v(" where中子查询")]),t._v(" "),_("p",[t._v("常用于聚合函数的子查询 比较 约束（子查询只能单条结果）")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v('SELECT * FROM 表 WHERE ...(子查询)\n\n# 查询和 智乃 同班的学生\nSELECT studentname FROM student WHERE classid = (\n\tSELECT classid FROM student WHERE studentname = "智乃"\n);\n')])])]),_("h5",{attrs:{id:"from中子查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#from中子查询"}},[t._v("#")]),t._v(" from中子查询")]),t._v(" "),_("p",[t._v("将子查询的临时表当做一个表进行应用 （子查询能多条结果）")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT * FROM (子查询) 别名 WHERE ...\n\n# 查出每个同学所有科目的平均分数\nSELECT studentname,c.avg FROM (\n\tSELECT sid,avg(score) avg FROM scores GROUP BY sid\n)c JOIN student s ON c.sid = s.studentid\n")])])]),_("p",[t._v("PS : 使用临时表需要手动指定表名")]),t._v(" "),_("h5",{attrs:{id:"select中子查询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#select中子查询"}},[t._v("#")]),t._v(" select中子查询")]),t._v(" "),_("p",[t._v("将结果进行展示，在 两表有字段关联约束进行查询使用（子查询只能单条结果）")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT (子查询),... FROM 表\n\n\n")])])]),_("h5",{attrs:{id:"in"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#in"}},[t._v("#")]),t._v(" IN")]),t._v(" "),_("p",[t._v("内层查询语句仅仅返回一个数据字段，数据字段中的值将供外层查询语句进行比较操作")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT {* | 查询字段} FROM 表名1 WHERE 字段 [NOT] IN(SELECT 字段 FROM 表名2 WHERE 条件表达式);\n\n# 查询 三班有多少女生\nSELECT studentname FROM student WHERE classid IN(\n    SELECT classid FROM class WHERE classid = 3\n)AND sex = '女';\n# 查询 与‘智乃’同一个班的学生\nSELECT studentname FROM\tstudent WHERE classid IN( \n    SELECT classid FROM student WHERE studentname = '智乃' \n);\n")])])]),_("p",[_("strong",[t._v("注意：")]),t._v(" IN 后面子查询返回结果要和IN前的字段匹配")]),t._v(" "),_("h5",{attrs:{id:"exists"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#exists"}},[t._v("#")]),t._v(" EXISTS")]),t._v(" "),_("p",[t._v("参数可以是任意一个子查询， 这个子查询的作用相当于"),_("strong",[t._v("测试")]),t._v("，返回 布尔值 , 如果 TRUE 外层查询才会执行")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT  {* | 查询字段}  FROM  表名1  WHERE  [NOT]  EXISTS  (SELECT  字段  FROM  表名2  WHERE  条件表达式);\n\n# 测试 两表关系(匹配显示，不匹配不显示)\nSELECT\n\tstudentid,\n\tstudentname \nFROM student WHERE\n\tEXISTS ( SELECT * FROM class WHERE class.classid = student.classid );\n")])])]),_("h5",{attrs:{id:"any"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#any"}},[t._v("#")]),t._v(" ANY")]),t._v(" "),_("p",[t._v("满足任意一个条件，子查询返回的字段列表进行比较，将不匹配的过滤")]),t._v(" "),_("div",{staticClass:"language-MYSQL extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT * FROM 表名 WHERE [NOT] 字段 {比较运算符} ANY(SELECT 字段 FROM 表名);\n\n# 查询 已经分配班级的学生\nSELECT classid,studentname FROM student \nWHERE\n\tclassid = ANY(SELECT classid FROM class);\n#或 (结果一样)\nSELECT classid,studentname FROM student \nWHERE\n\tclassid IN( SELECT classid FROM class);\n")])])]),_("h5",{attrs:{id:"all"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[t._v("#")]),t._v(" ALL")]),t._v(" "),_("p",[t._v("子查询返回的字段列表结果需同时满足所有内层查询条件，否则查询为空")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT * FROM 表名 WHERE [NOT] 字段 {比较运算符} ALL(SELECT 字段 FROM 表名);\n \n# 查询 test 高于蕾姆的同学\nSELECT studentname,test FROM student \nWHERE \n\ttest > ALL(SELECT test FROM student WHERE studentname = '蕾姆');\t\n# 查询 匹配错班级的同学(数据错乱)\nSELECT classid,studentname FROM student \nWHERE\n\tclassid > ALL(SELECT classid FROM class);\n#或 (结果一样)\nSELECT classid,studentname FROM student \nWHERE\n\tclassid NOT IN( SELECT classid FROM class);\n")])])]),_("h5",{attrs:{id:"比较运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),_("p",[t._v("ANY 和 ALL 都用到比较运算符，但还可以使用其他运算符")]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT * FROM 表名 WHERE [NOT] 字段 {比较运算符} (SELECT 字段 FROM 表名)\n")])])]),_("h3",{attrs:{id:"查新执行顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查新执行顺序"}},[t._v("#")]),t._v(" 查新执行顺序")]),t._v(" "),_("p",[_("strong",[t._v("书写顺序：")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SELECT DISTINCT ... FROM ... JOIN ... ON ... WHERE ... \n\tGROUP BY ... HAVING ... ORDER BY ... DESC LIMIT ...\n")])])]),_("p",[_("strong",[t._v("执行顺序：")])]),t._v(" "),_("ol",[_("li",[_("code",[t._v("FROM")])]),t._v(" "),_("li",[_("code",[t._v("NO")])]),t._v(" "),_("li",[_("code",[t._v("JOIN")])]),t._v(" "),_("li",[_("code",[t._v("WHERE")])]),t._v(" "),_("li",[_("code",[t._v("GROUP BY")])]),t._v(" "),_("li",[_("code",[t._v("AVG,SUM,...")]),t._v(" (聚合函数)")]),t._v(" "),_("li",[_("code",[t._v("HAVING")])]),t._v(" "),_("li",[_("code",[t._v("SELECT")])]),t._v(" "),_("li",[_("code",[t._v("DISTINCT")])]),t._v(" "),_("li",[_("code",[t._v("ORDER BY")])]),t._v(" "),_("li",[_("code",[t._v("LIMIT")])])]),t._v(" "),_("h3",{attrs:{id:"sql优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[t._v("#")]),t._v(" SQL优化")]),t._v(" "),_("ol",[_("li",[t._v("避免全表扫描，应先考虑 where 及 order by 涉及的列上建立索引")]),t._v(" "),_("li",[t._v("避免 where语句 中的字段进行 "),_("code",[t._v("null值")]),t._v(" 判断")]),t._v(" "),_("li",[t._v("避免 where语句 中使用 "),_("code",[t._v("!=")]),t._v(" 或 "),_("code",[t._v("<")]),t._v(" / "),_("code",[t._v(">")]),t._v(" 操作符")]),t._v(" "),_("li",[t._v("避免 where语句 使用 "),_("code",[t._v("OR")]),t._v(" 连接条件")]),t._v(" "),_("li",[t._v("谨慎使用 "),_("code",[t._v("IN")]),t._v(" / "),_("code",[t._v("NOT IN")]),t._v(" 进行查询，连续数字可使用 "),_("code",[t._v("BETWEEN")]),t._v(" 范围查询")])]),t._v(" "),_("h2",{attrs:{id:"完整性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#完整性"}},[t._v("#")]),t._v(" 完整性")]),t._v(" "),_("p",[t._v("保证了数据的有效性和准确性，以防止数据表中插入错误的数据")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("约束条件")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("code",[t._v("PRIMARY KEY")])]),t._v(" "),_("td",[t._v("主键约束，用于唯一标识对应的记录")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("FOREIGN KEY")])]),t._v(" "),_("td",[t._v("外键约束")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("NOT NULL")])]),t._v(" "),_("td",[t._v("非空约束")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("UNIQUE [KEY]")])]),t._v(" "),_("td",[t._v("唯一性约束")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("DEFAULT")])]),t._v(" "),_("td",[t._v("默认值约束，用于设置字段的默认值")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("AUTO_INCREMENT")])]),t._v(" "),_("td",[t._v("自动增长")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("CHECK")])]),t._v(" "),_("td",[t._v("约束取值范围")])]),t._v(" "),_("tr",[_("td",[_("code",[t._v("UNSIGNED")])]),t._v(" "),_("td",[t._v("无符号约束")])])])]),t._v(" "),_("p",[_("strong",[t._v("注意：")]),t._v(" 多个约束需要空格分隔")]),t._v(" "),_("h3",{attrs:{id:"实体完整性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实体完整性"}},[t._v("#")]),t._v(" 实体完整性")]),t._v(" "),_("h4",{attrs:{id:"单字段主键"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单字段主键"}},[t._v("#")]),t._v(" 单字段主键")]),t._v(" "),_("p",[t._v("每表只有一个主键，唯一性，不能NULL，可创建联合主键\n==字段名 数据类型 PRIMARY KEY[(字段名1,字段名2,···字段名n)];==\n==ALTER TABLE student ADD PRIMARY KEY[(字段名1,字段名2,···字段名n)]==")]),t._v(" "),_("h4",{attrs:{id:"唯一约束"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#唯一约束"}},[t._v("#")]),t._v(" 唯一约束")]),t._v(" "),_("p",[t._v("数据不能重复，只能有一次为空\n==字段名 数据类型 UNIQUE;==")]),t._v(" "),_("h4",{attrs:{id:"字段自动增加"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字段自动增加"}},[t._v("#")]),t._v(" 字段自动增加")]),t._v(" "),_("p",[t._v("在数据表中，若想为表中插入的新记录自动生成"),_("strong",[t._v("唯一的 ID")]),t._v(",可以使用自增约束来实现\n==字段名 数据类型 AUTO_INCREMENT;==")]),t._v(" "),_("h3",{attrs:{id:"域完整性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#域完整性"}},[t._v("#")]),t._v(" 域完整性")]),t._v(" "),_("h4",{attrs:{id:"数据类型-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型-2"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),_("h4",{attrs:{id:"非空约束"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非空约束"}},[t._v("#")]),t._v(" 非空约束")]),t._v(" "),_("p",[t._v("字段的值不能为NULL(空)\n==字段名 数据类型 NOT NULL;==")]),t._v(" "),_("h4",{attrs:{id:"默认约束"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#默认约束"}},[t._v("#")]),t._v(" 默认约束")]),t._v(" "),_("p",[t._v("新添数据时，如果未赋值，则自动插入默认值\n==字段名 数据类型 DEFAULT(默认值);==")]),t._v(" "),_("h4",{attrs:{id:"无符号约束"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#无符号约束"}},[t._v("#")]),t._v(" 无符号约束")]),t._v(" "),_("p",[t._v("==字段名 数据类型 UNSIGNED;==")]),t._v(" "),_("h4",{attrs:{id:"约束范围"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#约束范围"}},[t._v("#")]),t._v(" 约束范围")]),t._v(" "),_("p",[t._v("==字段名 数据类型 CHECK (字段值>0 and 字段值<=100);==")]),t._v(" "),_("h3",{attrs:{id:"引用完整性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引用完整性"}},[t._v("#")]),t._v(" 引用完整性")]),t._v(" "),_("h4",{attrs:{id:"外键约束"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#外键约束"}},[t._v("#")]),t._v(" 外键约束")]),t._v(" "),_("p",[t._v("外键是指引用另一个表中的一个字段或多个字段。建立、加强两表数据之间的链接")]),t._v(" "),_("img",{attrs:{src:"https://image.bozhu12.cc/myblog/MySQL/MySQL01.png"}}),t._v(" "),_("p",[_("strong",[t._v("创建表时 定义外键：")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("# 从表\nCREATE TABLE 表名(\n   字段名1 数据类型 [完整性约束条件],\n   字段名2 数据类型 [完整性约束条件],\n   ·······\n   FOREIGN KEY (外键字段) REFERENCES 主表( 主表的 主键 / 唯一 字段 )\n);\n")])])]),_("p",[_("strong",[t._v("创建表后 定义外键：")]),t._v("\n==ALTER  TABLE 从表 ADD CONSTRAINT [自定义外键名] FOREIGN KEY(从表 外键字段) REFERENCES 主表( 主表的 主键 / 唯一 字段 );==")]),t._v(" "),_("p",[_("strong",[t._v("外键查询")]),t._v(" （查询表详细 可查询表的外键）")]),t._v(" "),_("p",[t._v("==SHOW CREATE TABLE 表名;==")]),t._v(" "),_("p",[_("strong",[t._v("外键删除")])]),t._v(" "),_("p",[t._v("根据逻辑的需求，需要解除两个表之间的关联关系时，就需要删除外键约束\n==ALTER TABLE 表名 DROP FOREIGN KEY 外键名;==")]),t._v(" "),_("p",[_("strong",[t._v("注意：")])]),t._v(" "),_("ol",[_("li",[t._v("主表是被外键引用的字段，且该字段有 "),_("strong",[t._v("主键约束")]),t._v("/"),_("strong",[t._v("唯一性约束")])]),t._v(" "),_("li",[t._v("被引用的是 主表，引用 的是 从表，两表是主从关系")]),t._v(" "),_("li",[t._v("引入外键后，从表 外键字段 只能插入主表被引用的字段值")]),t._v(" "),_("li",[t._v("如果想删除 主表 一条记录，则必须删除完 与主表相同外键值(对象是删除的记录)的从表外键字段记录(删除外键字段值与主表相同的值) ，主表才能进行删除记录，确保数据的完整性")]),t._v(" "),_("li",[t._v("建立外键的表必须是InnoDB型不能是临时表。因为MySQL中只有InnoDB型的表才支持外键")]),t._v(" "),_("li",[t._v("定义外键名时，不能加引号。如:  'FK_ ID' 或\" FK_ID \"都是错误的 ，")]),t._v(" "),_("li",[t._v("自定义外键名 用于删除外键约束时使用，也可不设置，一般建议“_fk”为结尾")])]),t._v(" "),_("h2",{attrs:{id:"索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),_("p",[t._v("索引的目的在于提高查询效率，与我们查字典所用的目录是一个道理")]),t._v(" "),_("p",[_("strong",[t._v("优点：")])]),t._v(" "),_("ul",[_("li",[t._v("提高查询效率")]),t._v(" "),_("li",[t._v("降低CPU使用率")])]),t._v(" "),_("p",[_("strong",[t._v("缺点：")])]),t._v(" "),_("ul",[_("li",[t._v("索引本身很大，存储在 内存/硬盘 中")]),t._v(" "),_("li",[t._v("索引会降低 增删改 的效率")])]),t._v(" "),_("p",[_("strong",[t._v("索引分类：")])]),t._v(" "),_("ul",[_("li",[_("strong",[_("a",{attrs:{href:"#%E5%8D%95%E5%88%97%E7%B4%A2%E5%BC%95"}},[t._v("单列索引")])])]),t._v(" "),_("li",[_("strong",[_("a",{attrs:{href:"#%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95",title:"UNIQUE "}},[t._v("唯一索引")])])]),t._v(" "),_("li",[t._v("联合索引")]),t._v(" "),_("li",[t._v("主键索引")])]),t._v(" "),_("blockquote",[_("p",[t._v("主键和唯一的区别：主键不能为null，而唯一可以")])]),t._v(" "),_("h3",{attrs:{id:"索引创建"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引创建"}},[t._v("#")]),t._v(" 索引创建")]),t._v(" "),_("p",[_("strong",[t._v("建表时创建索引：")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("CREATE TABLE 表名(\n\t字段名1 数据类型 [完整性约束条件]，\n\t字段名2 数据类型 [完整性约束条件]，\n     ·····\n\t字段名n 数据类型\n[UNIQUE | FULLTEXT | SPATIAL] INDEX | KEY\n\t[索引名] (字段名1 [长度]) [ASC | DESC])\n)[存储引擎];\n")])])]),_("p",[_("strong",[t._v("UNIQUE")]),t._v("： 可选参数，表示唯一性约束\n"),_("strong",[t._v("FULLTEXT")]),t._v("：可选参数，表示全文约束\n"),_("strong",[t._v("SPATIAL")]),t._v("： 可选参数，表示空间约束\n"),_("strong",[t._v("INDEX")]),t._v(" 和 "),_("strong",[t._v("KEY")]),t._v("：用来表示字段的索引，二者选一即可\n"),_("strong",[t._v("索引名")]),t._v("：可选参数，表示创建的索引的名称\n"),_("strong",[t._v("字段名1")]),t._v("：指定索引对应字段的名称\n"),_("strong",[t._v("长度")]),t._v("：可选参数，用于表示索引的长度\n"),_("strong",[t._v("ASC")]),t._v(" 和 "),_("strong",[t._v("DESC")]),t._v("：可选参数，其中，ASC表示升序排列，DESC表示降序排列")]),t._v(" "),_("h4",{attrs:{id:"单列索引-normal"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单列索引-normal"}},[t._v("#")]),t._v(" 单列索引 (NORMAL)")]),t._v(" "),_("p",[t._v("在表中单个字段上创建索引，它可以是普通索引、唯一索引或者全文素引， 只要保证该索引只对应表中一个字段即可")]),t._v(" "),_("p",[_("strong",[t._v("创建代码：")])]),t._v(" "),_("p",[t._v("==CREATE INDEX 索引名 ON 表名 (字段名1[,字段名2...]);==")]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 ADD INDEX 索引名 (字段名1[,字段名2...]);==")]),t._v(" "),_("blockquote",[_("p",[t._v("以上添加代码一定一定要添加括号")])]),t._v(" "),_("p",[_("strong",[t._v("联合索引说明：")])]),t._v(" "),_("p",[t._v("单列索引多个字段，称为联合索引")]),t._v(" "),_("p",[t._v("触发联合索引的条件有：")]),t._v(" "),_("blockquote",[_("p",[t._v("假如索引添加形式为：==ALTER TABLE user ADD INDEX test (name,age)==")])]),t._v(" "),_("ul",[_("li",[t._v("**组合约束查询 ** "),_("code",[t._v("AND")]),t._v(" ("),_("code",[t._v("OR")]),t._v("查询不会触发索引)\n==... WHERE name= '张三' AND age=12==")]),t._v(" "),_("li",[_("strong",[t._v("单独约束查询")]),t._v(" 左边第一个字段会触发索引（右边的字段不会触发\n==WHERE name='张三'==")])]),t._v(" "),_("h4",{attrs:{id:"唯一索引-unique"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#唯一索引-unique"}},[t._v("#")]),t._v(" 唯一索引 (UNIQUE )")]),t._v(" "),_("p",[t._v("使字段的值必须是唯一的（允许null，但只能允许一个空")]),t._v(" "),_("p",[t._v("==CREATE UNIQUE INDEX 索引名 ON 表名 (字段名);==")]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 ADD UNIQUE INDEX 索引名 (字段名);==")]),t._v(" "),_("h4",{attrs:{id:"全文索引-fulltext"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#全文索引-fulltext"}},[t._v("#")]),t._v(" 全文索引 (FULLTEXT)")]),t._v(" "),_("p",[t._v("只能创建在CHAR、VARCHAR或TEXT类型的字段上，\n该索引只有"),_("strong",[t._v("MyISAM存储引擎")]),t._v("支持")]),t._v(" "),_("p",[t._v("==CREATE FULLTEXT INDEX 索引名 ON 表名 (字段名);==")]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 ADD FULLTEXT INDEX 索引名 (字段名);==\n"),_("strong",[t._v("注意：")]),t._v(" 后面需存储引擎(ENGINE =MyISAM)")]),t._v(" "),_("h4",{attrs:{id:"空间索引-spatial"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#空间索引-spatial"}},[t._v("#")]),t._v(" 空间索引 (SPATIAL)")]),t._v(" "),_("p",[t._v("只能创建在空间数据类型的字段上。MySQL中的空间数据类型有4种,分别是"),_("strong",[t._v("LGEOMETRY、POINT、 LINESTRING、POLYGON")])]),t._v(" "),_("p",[t._v("该索引只有"),_("strong",[t._v("MyISAM存储引擎")]),t._v("支持")]),t._v(" "),_("p",[t._v("==CREATE SPATIAL INDEX 索引名 ON 表名 (字段名);==")]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 ADD SPATIAL INDEX 索引名 (字段名);==")]),t._v(" "),_("p",[_("strong",[t._v("注意:")]),t._v(" 后面需存储引擎(ENGINE =MyISAM)")]),t._v(" "),_("h3",{attrs:{id:"索引删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引删除"}},[t._v("#")]),t._v(" 索引删除")]),t._v(" "),_("p",[t._v("==ALTER TABLE 表名 DROP INDEX 索引名;==")]),t._v(" "),_("p",[t._v("==DROP INDEX 索引名 ON 表名;==")]),t._v(" "),_("h2",{attrs:{id:"函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),_("h3",{attrs:{id:"数学函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[t._v("#")]),t._v(" 数学函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("函数名称")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("ABS(x)")]),t._v(" "),_("td",[t._v("返回x的绝对值")])]),t._v(" "),_("tr",[_("td",[t._v("SQRT(x)")]),t._v(" "),_("td",[t._v("返回x的非负2次方根")])]),t._v(" "),_("tr",[_("td",[t._v("MOD(x , y)")]),t._v(" "),_("td",[t._v("返回x被y除后的余数")])]),t._v(" "),_("tr",[_("td",[t._v("CEILING(x) / CEIL(x)")]),t._v(" "),_("td",[t._v("返回 不小于x的最大整数 (前提x有小数)")])]),t._v(" "),_("tr",[_("td",[t._v("FLOOR(x)")]),t._v(" "),_("td",[t._v("返回 不大于x的最小整数 (前提x有小数)")])]),t._v(" "),_("tr",[_("td",[t._v("ROUND(x , y)")]),t._v(" "),_("td",[t._v("对 x 四舍五入 操作，小数保留 y位")])]),t._v(" "),_("tr",[_("td",[t._v("TRUNCATE(x , y)")]),t._v(" "),_("td",[t._v("对 x 只舍不入 操作，小数保留 y位")])]),t._v(" "),_("tr",[_("td",[t._v("SIGN(x)")]),t._v(" "),_("td",[t._v("返回 x 符号 ( -1 / 0 / 1 )"),_("br"),t._v("x为数值，则判断 正或负的值 ；x为其他类型，则返回0")])])])]),t._v(" "),_("h3",{attrs:{id:"字符串函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[t._v("#")]),t._v(" 字符串函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("函数名称")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("LENGTH(str)")]),t._v(" "),_("td",[t._v("返回 字符串的长度")])]),t._v(" "),_("tr",[_("td",[t._v("CONCAT(s1 , s2 , .....)")]),t._v(" "),_("td",[t._v("返回 一个/多个字符串 连接的新字符串")])]),t._v(" "),_("tr",[_("td",[t._v("TRIM(str)")]),t._v(" "),_("td",[t._v("删除字符串两侧的空格")])]),t._v(" "),_("tr",[_("td",[t._v("REPLACE(str , s1 , s2)")]),t._v(" "),_("td",[t._v("使用字符串s2替换字符串str中所有的字符串s1")])]),t._v(" "),_("tr",[_("td",[t._v("SUBSTRING(tr , n , len)")]),t._v(" "),_("td",[t._v("返回字符串st的子串，起始位置为n,长度为len")])]),t._v(" "),_("tr",[_("td",[t._v("REVERSE(str)")]),t._v(" "),_("td",[t._v("返回 字符串顺序反转")])]),t._v(" "),_("tr",[_("td",[t._v("LOCATE(s1 , str)")]),t._v(" "),_("td",[t._v("返回 s1 在 str 中的起始位置")])]),t._v(" "),_("tr",[_("td",[t._v("UPPER(str)")]),t._v(" "),_("td",[t._v("将 所有 小写 转换为 大写")])]),t._v(" "),_("tr",[_("td",[t._v("LOWER(str)")]),t._v(" "),_("td",[t._v("将 所有 大写 转换为 小写")])]),t._v(" "),_("tr",[_("td",[t._v("FORMAT(str,format)")]),t._v(" "),_("td",[t._v("将 字符串 进行数据格式化")])])])]),t._v(" "),_("h3",{attrs:{id:"日期与时间的函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日期与时间的函数"}},[t._v("#")]),t._v(" 日期与时间的函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("函数名称")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("CURDATE()")]),t._v(" "),_("td",[t._v("获取 系统当前 日期")])]),t._v(" "),_("tr",[_("td",[t._v("CURTIME()")]),t._v(" "),_("td",[t._v("获取 系统当前 时间")])]),t._v(" "),_("tr",[_("td",[t._v("SYSDATE()")]),t._v(" "),_("td",[t._v("获取 当前系统 日期和时间")])]),t._v(" "),_("tr",[_("td",[t._v("DATE_ADD(now() , INTERVAL num {时间单位})")]),t._v(" "),_("td",[t._v("指定过去或未来时间点(num是对现在的时间进行相加)")])]),t._v(" "),_("tr",[_("td",[t._v("DATEDIFF(d1 , d2)")]),t._v(" "),_("td",[t._v("计算 两时间 间隔的天数(从0000.1.1开始 n 天后的日期)")])]),t._v(" "),_("tr",[_("td",[t._v("FROM_DAYS(day)")]),t._v(" "),_("td",[t._v("计算 时间 得出日期 (从0000.1.1开始 n 天后的日期)")])]),t._v(" "),_("tr",[_("td",[t._v("YEAR(d)")]),t._v(" "),_("td",[t._v("获取 日期年份")])]),t._v(" "),_("tr",[_("td",[t._v("MONTH(d)")]),t._v(" "),_("td",[t._v("获取 日期月份")])]),t._v(" "),_("tr",[_("td",[t._v("DAY(d)")]),t._v(" "),_("td",[t._v("获取 日期 日")])]),t._v(" "),_("tr",[_("td",[t._v("DATE_FORMAT(date , format)")]),t._v(" "),_("td",[t._v("日期格式化 "),_("br"),t._v("format ：'%m-%d-%Y'")])])])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://www.jc2182.com/mysql/mysql-datetime-funcs.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击了解更多日期&时间函数了解"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"条件判断函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#条件判断函数"}},[t._v("#")]),t._v(" 条件判断函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("函数名称")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("IF(expr , v1 , v2)")]),t._v(" "),_("td",[t._v("如果expr表达式为true返回v1,否则返回v2")])]),t._v(" "),_("tr",[_("td",[t._v("IFNULL(v1 , v2)")]),t._v(" "),_("td",[t._v("如果v1不为NULL返回v1,否则返回v2")])]),t._v(" "),_("tr",[_("td",[t._v("CASE expr WHEN v1 THEN r1 [WHEN v2 THEN r2......] [ELSE m] END")]),t._v(" "),_("td",[t._v("如果expr值等于v1、v2等,则返回对应位置THEN后面的结果，否则返回ELSE后的结果m")])])])]),t._v(" "),_("h3",{attrs:{id:"加密函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加密函数"}},[t._v("#")]),t._v(" 加密函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("函数名称")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("MD5(str)")]),t._v(" "),_("td",[t._v("对字符串 str 进行MD5加密")])]),t._v(" "),_("tr",[_("td",[t._v("ENCODE(str , pwd stu)")]),t._v(" "),_("td",[t._v("使用pwd作为密码加密字符串str")])]),t._v(" "),_("tr",[_("td",[t._v("DECODE(str , pwd str)")]),t._v(" "),_("td",[t._v("使用pwd作为密码解密字符串str")])])])]),t._v(" "),_("h2",{attrs:{id:"事务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),_("p",[t._v("事务指逻辑上的一组操作，组成这组操作的各个单元，要不全部成功，就全部不成功，"),_("strong",[t._v("同一个事务的操作具备同步优点")])]),t._v(" "),_("div",{staticClass:"language-mysql extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("SET AUTOCOMMIT = 0;\nSTART TRANSACTION; |  BEGIN;\n···\n····\nROLLBACK;\nCOMMIT; \n")])])]),_("p",[_("strong",[t._v("SET AUTOCOMMIT：")]),t._v(" 自动事务提交开关（0关闭；1开启）\n"),_("strong",[t._v("START TRANSACTION | BEGIN：")]),t._v(" 开启事务(处于事务中，不会影响数据库数据)\n"),_("strong",[t._v("ROLLBACK：")]),t._v(" 回滚事务(取消事务，前提是事务未提交前回滚)\n"),_("strong",[t._v("COMMIT ：")]),t._v(" 事务提交(事务生效后会立即影响数据库数据)")]),t._v(" "),_("h3",{attrs:{id:"事务acid特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事务acid特性"}},[t._v("#")]),t._v(" 事务ACID特性")]),t._v(" "),_("p",[_("strong",[t._v("原子性(Atomicity)")]),t._v("\n指事务是一个不可分割的工作单位，事务中的操作要么执行成功，要么执行失败")]),t._v(" "),_("p",[_("strong",[t._v("一致性(Consistency)")]),t._v("\n事务前后数据的完整性必须保持一致(数据库的完整性：如果数据库在某个时间点下，所有的数据都符合所有的约束，则称数据库为符合完整性的状态)")]),t._v(" "),_("p",[_("strong",[t._v("隔离性(Isolation)")]),t._v("\n指多个用户并发访问数据库时，一个用户的事务不能被其它用户的事务所干扰，多个并发事务之间数据要相互隔离")]),t._v(" "),_("p",[_("strong",[t._v("持久性(Durability)")]),t._v("\n指一个事务一旦被提交，数据库中的数据改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响")]),t._v(" "),_("h3",{attrs:{id:"事务安全问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事务安全问题"}},[t._v("#")]),t._v(" 事务安全问题")]),t._v(" "),_("p",[_("strong",[t._v("脏读：")]),t._v(" 两事务 某一事务读取到另一个事务修改且未提交的数据")]),t._v(" "),_("p",[_("strong",[t._v("不可重复读：")]),t._v(" 某一事务多次读取同一条记录的过程，读取的结果不相同过程数据有更改，读取到另一个事务已经提交的数据")]),t._v(" "),_("p",[_("strong",[t._v("虚读(幻读)：")]),t._v(" 某一事务多次查询数据，由于其他事务 新增 或 删除 记录造成多次查询出的记录条数不同")]),t._v(" "),_("h3",{attrs:{id:"事务隔离级别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别"}},[t._v("#")]),t._v(" 事务隔离级别")]),t._v(" "),_("p",[t._v("防止不同隔离性的问题")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("隔离类型")]),t._v(" "),_("th",[t._v("脏读")]),t._v(" "),_("th",[t._v("不可重复读")]),t._v(" "),_("th",[t._v("幻读")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[_("strong",[t._v("未提交")]),t._v(" READ  UNCOMMITTED")]),t._v(" "),_("td",[t._v("允许")]),t._v(" "),_("td",[t._v("允许")]),t._v(" "),_("td",[t._v("允许")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("已读提交")]),t._v(" READ  COMMITTED")]),t._v(" "),_("td",[t._v("禁止")]),t._v(" "),_("td",[t._v("允许")]),t._v(" "),_("td",[t._v("允许")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("可重复读")]),t._v(" REPEATABLE READ")]),t._v(" "),_("td",[t._v("禁止")]),t._v(" "),_("td",[t._v("禁止")]),t._v(" "),_("td",[t._v("可能")])]),t._v(" "),_("tr",[_("td",[_("strong",[t._v("顺序读")]),t._v(" SERIALIZABLE")]),t._v(" "),_("td",[t._v("禁止")]),t._v(" "),_("td",[t._v("禁止")]),t._v(" "),_("td",[t._v("禁止")])])])]),t._v(" "),_("p",[t._v("一般默认 "),_("strong",[t._v("可重复读")]),t._v("、 "),_("strong",[t._v("已读提交")])]),t._v(" "),_("p",[_("strong",[t._v("修改隔离级别")]),t._v("\n==SET  [SESSION | GLOBAL]  TRANSACTION  ISOLATION   LEVEL 隔离类型;==\n"),_("strong",[t._v("SESSION：")]),t._v(" 当前会话\n"),_("strong",[t._v("GLOBAL：")]),t._v("  全局")]),t._v(" "),_("p",[_("strong",[t._v("查询隔离级别")]),t._v("\n==SELECT @@TX_ISOLATION;==  (MySQL版本8前)\n==SELECT @@TRANSACTION_ISOLATION;== (MySQL版本8后)")]),t._v(" "),_("h4",{attrs:{id:"未提交-read-uncommitted"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#未提交-read-uncommitted"}},[t._v("#")]),t._v(" 未提交 (READ  UNCOMMITTED)")]),t._v(" "),_("p",[t._v("读未提交，该隔离级别允许脏读取，其隔离级别是最低的")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("时间(T)")]),t._v(" "),_("th",[t._v("事务A")]),t._v(" "),_("th",[t._v("事务B")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("T1")]),t._v(" "),_("td",[t._v("开始事务")]),t._v(" "),_("td",[t._v("开始事务")])]),t._v(" "),_("tr",[_("td",[t._v("T2")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("查余额(500元)")])]),t._v(" "),_("tr",[_("td",[t._v("T3")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("取300元")])]),t._v(" "),_("tr",[_("td",[t._v("T4")]),t._v(" "),_("td",[t._v("查余额(200元)")]),t._v(" "),_("td",[t._v("==")])]),t._v(" "),_("tr",[_("td",[t._v("T5")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("滚动事务")])]),t._v(" "),_("tr",[_("td",[t._v("T6")]),t._v(" "),_("td",[t._v("存800元")]),t._v(" "),_("td",[t._v("==")])]),t._v(" "),_("tr",[_("td",[t._v("T7")]),t._v(" "),_("td",[t._v("提交事务")]),t._v(" "),_("td",[t._v("==")])]),t._v(" "),_("tr",[_("td",[t._v("T8")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("取100元")])]),t._v(" "),_("tr",[_("td",[t._v("T9")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("提提交事务")])])])]),t._v(" "),_("p",[t._v("最后余额剩1200元。T4 A脏读B修改的数据，T5 B回滚(撤回T5前的所有操作)，最后B只提取100元！")]),t._v(" "),_("h4",{attrs:{id:"已读提交-read-committed"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#已读提交-read-committed"}},[t._v("#")]),t._v(" 已读提交 (READ  COMMITTED)")]),t._v(" "),_("p",[t._v("读已提交是不同的事务执行的时候 "),_("strong",[t._v("只能获取")]),t._v(" 到已经提交的数据")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("时间(T)")]),t._v(" "),_("th",[t._v("事务A")]),t._v(" "),_("th",[t._v("事务B")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("T1")]),t._v(" "),_("td",[t._v("开始事务")]),t._v(" "),_("td",[t._v("开始事务")])]),t._v(" "),_("tr",[_("td",[t._v("T2")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("查余额(500元)")])]),t._v(" "),_("tr",[_("td",[t._v("T3")]),t._v(" "),_("td",[t._v("查余额(500元)")]),t._v(" "),_("td",[t._v("==")])]),t._v(" "),_("tr",[_("td",[t._v("T4")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("取500元")])]),t._v(" "),_("tr",[_("td",[t._v("T5")]),t._v(" "),_("td",[t._v("查余额(500元)")]),t._v(" "),_("td",[t._v("==")])]),t._v(" "),_("tr",[_("td",[t._v("T6")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("提交事务")])]),t._v(" "),_("tr",[_("td",[t._v("T7")]),t._v(" "),_("td",[t._v("查余额(0)")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("T8")]),t._v(" "),_("td",[t._v("提交事务")]),t._v(" "),_("td")])])]),t._v(" "),_("p",[t._v("A只能读取 事务提交后的数据！！")]),t._v(" "),_("h4",{attrs:{id:"可重复读-repeatable-read"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可重复读-repeatable-read"}},[t._v("#")]),t._v(" 可重复读 (REPEATABLE READ)")]),t._v(" "),_("p",[t._v("保证在事务处理过程中，多次读取同一个数据时，该数据的值和事务开始时刻是一致的")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("时间(T)")]),t._v(" "),_("th",[t._v("事务A")]),t._v(" "),_("th",[t._v("事务B")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("T1")]),t._v(" "),_("td",[t._v("开始事务")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("T2")]),t._v(" "),_("td",[t._v("查所有数据")]),t._v(" "),_("td",[t._v("开始事务")])]),t._v(" "),_("tr",[_("td",[t._v("T3")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("插入一条数据")])]),t._v(" "),_("tr",[_("td",[t._v("T4")]),t._v(" "),_("td",[t._v("==")]),t._v(" "),_("td",[t._v("提交事务")])]),t._v(" "),_("tr",[_("td",[t._v("T5")]),t._v(" "),_("td",[t._v("查所有数据(和T2一样)")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("T6")]),t._v(" "),_("td",[t._v("修改范围数据")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("T7")]),t._v(" "),_("td",[t._v("查所有数据(多了一条数据)")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("T8")]),t._v(" "),_("td",[t._v("提交事务")]),t._v(" "),_("td")])])]),t._v(" "),_("p",[t._v("事务A 的 T2 查询数据 与 T5查询数据 是一样的 ，确认数据无误后 对表数据值修改，紧接查询事务多出了一条数据！！（作为这一前提 事务B 插入数据提交事务")]),t._v(" "),_("blockquote",[_("p",[t._v("事务B未提交 ，事务A 对数据进行更改，则不会显示，除非 事务B提交")])]),t._v(" "),_("h4",{attrs:{id:"顺序读-serializable"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#顺序读-serializable"}},[t._v("#")]),t._v(" 顺序读 (SERIALIZABLE)")]),t._v(" "),_("p",[t._v("最严格的事务隔离级别。事务以排队形式进行执行。某一事务对数据进行修改必须等另一个 提交 或 回滚 ，才可以进行数据修改！！")]),t._v(" "),_("h3",{attrs:{id:"隔离级别锁的情况"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别锁的情况"}},[t._v("#")]),t._v(" 隔离级别锁的情况")]),t._v(" "),_("p",[_("strong",[t._v("读未提交(RU)：")]),t._v(" 有行级的锁，没有间隙锁。与RC的区别是能够查询到未提交的数据\n"),_("strong",[t._v("读已提交(RC)：")]),t._v(" 有行级的锁，没有间隙锁，读不到没有提交的数据\n"),_("strong",[t._v("可重复读(RR)：")]),t._v(" 有行级的锁，有间隙锁，每读取的数据都一样，且没有幻读的情况\n"),_("strong",[t._v("序列化(S)：")]),t._v(" 有行级锁，也有间隙锁，读表的时候，就已经上锁了")]),t._v(" "),_("h2",{attrs:{id:"锁机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#锁机制"}},[t._v("#")]),t._v(" 锁机制")]),t._v(" "),_("p",[t._v("高并发场景我们也不难发现 , 就是在 双十一 , 春运抢票 , 等等... 在当中也不难发现 , 在巨大流量冲击下 , 数据很有可能会被击穿导致负数等异常现象 , 因此系统需要运用一些技术手段抵抗这巨大流量冲击 .")]),t._v(" "),_("p",[t._v("我们可以通过锁机制来控制数据击穿问题 , 我们分别了解两个锁机制 :")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("悲观锁")]),t._v("\n在数据进行操作时 , 会进行先加锁 , 执行完后释放锁 , 供给其他线程使用 , 在一个锁执行的过程 , 其他线程则需要等待获取锁")]),t._v(" "),_("li",[_("strong",[t._v("乐观锁")]),t._v("\n不会进行加锁 , 而是在更新数据时检查是否被其他线程修改过 , 从而判断是否进行更改")])]),t._v(" "),_("p",[t._v("**区别 : **")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}}),t._v(" "),_("th",[t._v("悲观锁")]),t._v(" "),_("th",[t._v("乐观锁")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[_("strong",[t._v("操作")])]),t._v(" "),_("td",[t._v("加锁")]),t._v(" "),_("td",[t._v("不加锁")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[_("strong",[t._v("检验")])]),t._v(" "),_("td",[t._v("业务逻辑层")]),t._v(" "),_("td",[t._v("SQL操作层")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}}),t._v(" "),_("td"),t._v(" "),_("td")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);